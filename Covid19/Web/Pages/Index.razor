@page "/"
@inject HttpClient Http

<h3>Cases in Numbers</h3>

@if (Countries == null) {
    <Loading />
} else {
    <div>
        <p>
            <strong>
                <a href="/world">World</a>:
                <span class="confirmed">@Countries.Sum(i => i.Confirmed).ToString("n0") Confirmed</span> /
                <span class="recovered">@Countries.Sum(i => i.Recovered).ToString("n0") Recovered</span> /
                <span class="deaths">@Countries.Sum(i => i.Deaths).ToString("n0") Deaths</span> /
                <span class="current">@Countries.Sum(i => i.Current).ToString("n0") Current</span>
            </strong>
        </p>
    </div>

    <div>
        <div class="form-group">
            <input type="text" class="form-control search-box" placeholder="Search..." @bind-value="SearchText" @oninput="Search" autofocus>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Country</th>
                <th class="d-none d-sm-table-cell">Confirmed</th>
                <th class="d-none d-sm-table-cell">Recovered</th>
                <th class="d-none d-sm-table-cell">Deaths</th>
                <th class="d-none d-sm-table-cell">
                    Current
                    (<span class="confirmed">C</span> -
                    <span class="recovered">R</span> -
                    <span class="deaths">D</span>)
                </th>
                <th class="d-table-cell d-sm-none">
                    <span class="confirmed">Confirmed</span> /
                    <span class="recovered">Recovered</span> /
                    <span class="deaths">Deaths</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in FilteredCountries) {
                <tr>
                    <td><a href="/charts/@country.Name">@country.Name</a></td>
                    <td class="confirmed d-none d-sm-table-cell">@country.Confirmed.ToString("n0")</td>
                    <td class="recovered d-none d-sm-table-cell">@country.Recovered.ToString("n0")</td>
                    <td class="deaths d-none d-sm-table-cell">@country.Deaths.ToString("n0")</td>
                    <td class="current d-none d-sm-table-cell">@country.Current.ToString("n0")</td>
                    <td class="d-table-cell d-sm-none">
                        <span class="confirmed">@country.Confirmed.ToString("n0")</span> /
                        <span class="recovered">@country.Recovered.ToString("n0")</span> /
                        <span class="deaths">@country.Deaths.ToString("n0")</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    string SearchText;
    IEnumerable<CountryOverviewDto>
    Countries;
    IEnumerable<CountryOverviewDto>
        FilteredCountries => Countries?
        .Where(i => string.IsNullOrEmpty(SearchText) || i.Name.StartsWith(SearchText.Trim(), StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync() {
        Countries = await Http.GetJsonAsync<IEnumerable<CountryOverviewDto>>(Constants.ApiUrl + "/countries");
    }

    private void Search() {
        StateHasChanged();
    }
}
