@page "/"
@inject HttpClient Http

<h1>Cases in Numbers</h1>

@if (Countries == null) {
    <Loading />
} else {
    <table class="table">
        <thead>
            <tr>
                <th>Country</th>
                <th class="d-none d-sm-table-cell">Confirmed</th>
                <th class="d-none d-sm-table-cell">Recovered</th>
                <th class="d-none d-sm-table-cell">Deaths</th>
                <th class="d-none d-sm-table-cell">
                    Current
                    (<span class="confirmed">C</span> -
                    <span class="recovered">R</span> -
                    <span class="deaths">D</span>)
                </th>
                <th class="d-table-cell d-sm-none">
                    <span class="confirmed">Confirmed</span> /
                    <span class="recovered">Recovered</span> /
                    <span class="deaths">Deaths</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in Countries.OrderBy(i => i.Name)) {
                <tr>
                    <td><a href="/charts/@country.Name">@country.Name</a></td>
                    <td class="confirmed d-none d-sm-table-cell">@country.CurrentConfirmed</td>
                    <td class="recovered d-none d-sm-table-cell">@country.CurrentRecovered</td>
                    <td class="deaths d-none d-sm-table-cell">@country.CurrentDeaths</td>
                    <td class="current d-none d-sm-table-cell">@country.Current</td>
                    <td class="d-table-cell d-sm-none">
                        <span class="confirmed">@country.CurrentConfirmed</span> /
                        <span class="recovered">@country.CurrentRecovered</span> /
                        <span class="deaths">@country.CurrentDeaths</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="py-5">
        <a href="https://github.com/pomber/covid19" target="_blank">Data from Pomber/Covid19</a>
    </div>
}

@code {
    IEnumerable<Country> Countries;

    protected override async Task OnInitializedAsync() {
        Countries = await DataUtility.GetData(Http);
    }
}
